18/07: 	Isi helped me find a new topic and dataset: Satellite Image Classification https://www.kaggle.com/datasets/mahmoudreda55/satellite-image-classification

19/07: 	Started with new project from scratch. Learned how to conduct directory operations with os and shutil
	Data explored and cleaned
	Duplicated images are copied images with a name format that would pass as unique at first glance but fixed it
	There was no dataframe to accompany image data, so I worked with nested lists that I created
	Then realised how stupid that was and decided to use dataframe instead

20/07: 	Created dataframe with image names and classes
	Adapted notebook
	Balanced Data

21/07: 	Train-test split and dataframe fitted to it
	Began research on CNNs

22/07: 	Fixed lack of data for baseline models, wrote function for train-test split
	Decided that I will probably not work on computer vision, CNN and XGBoost enough for the project
	CNN research continues:
		Resources: The Chain Rule 	--> https://www.youtube.com/watch?v=wl1myxrtQHQ&list=LL&index=3&ab_channel=StatQuestwithJoshStarmer
			   Gradient Descent 	--> https://www.youtube.com/watch?v=sDv4f4s2SB8&t=8s&ab_channel=StatQuestwithJoshStarmer
			   Neural Networks 1 	--> https://www.youtube.com/watch?v=CqOfi41LfDw&list=LL&index=4&ab_channel=StatQuestwithJoshStarmer
					 & 2	--> https://www.youtube.com/watch?v=IN2XmBhILt4&list=LL&index=2&ab_channel=StatQuestwithJoshStarmer

	FOUND ERROR: in my handling of directories. Test set needs to be mixed. Validation set needed. Replace test set with validation set and create test from remaining train set
		MUST ADD DESTINATION PATHS FOR TEST SETS. MUST ADD DESTINATION FOR TEST SET TO homemade_split. MUST ADAPT WHOLE SCRIPT. MUST RUN IT ONCE WITH ADAPTATIONS TO SEE EVERYTHING WORKS
	Fixed most of the script, homemade_split seems finished, MUST SET UP VARIABLES AND RUN

23/07:	Running, making last adjustments to patched up script. All seems fine.
	Trying to decide on a reasonable train-test split.
		
		Resources: 			--> https://cs230.stanford.edu/blog/split/
						--> https://onlinelibrary.wiley.com/doi/full/10.1002/sam.11583#:~:text=A%20commonly%20used%20ratio%20is,are%20also%20used%20in%20practice.
	FOUND ERROR: Split should be conducted with random.seed(number) and sample(filenames, how_much) instead of sample() alone, because I want the data to shuffle, but in a deterministic way
	Potential sensible comparisons: 1. Baseline model with imbalanced_df vs. model with balanced_df with same parameter tuning
					2. Model with balanced_df vs. same model with balanced_df and different parameter tuning
					3. Balanced_df with different models and best possible scores of each model
	Had to fix homemade_split yet again, kept stumbling into errors. Took the entire evening and still nothing to show for it...
	Problem lied in a ":" symbol I could not see to delete. Finally managed to fix it. Script adapted. Sets prepared. Ready for a test drive

	More CNN Resources:
			  flow_from_directory
				 & generators	--> https://vijayabhaskar96.medium.com/tutorial-image-classification-with-keras-flow-from-directory-and-generators-95f75ebe5720
			   random seed		--> https://medium.com/@debanjana.bhattacharyya9818/numpy-random-seed-101-explained-2e96ee3fd90b
			   Train, valid, test	--> https://cs230.stanford.edu/blog/split/
						--> https://onlinelibrary.wiley.com/doi/full/10.1002/sam.11583#:~:text=A%20commonly%20used%20ratio%20is,are%20also%20used%20in%20practice.
						--> Sabina's wisdom
			   batch_size & epoch	--> https://machinelearningmastery.com/difference-between-a-batch-and-an-epoch/#:~:text=The%20batch%20size%20is%20a%20number%20of%20samples%20processed%20before,samples%20in%20the%20training%20dataset.
			   Tutorial		--> https://keras.io/examples/vision/image_classification_from_scratch/
			   keras.fit &
			   keras.fit_generator	--> https://www.geeksforgeeks.org/keras-fit-and-keras-fit_generator/
			   Units, shapes,
			    layers & dim	--> https://stackoverflow.com/questions/44747343/keras-input-explanation-input-shape-units-batch-size-dim-etc#:~:text=The%20input%20shape&text=In%20Keras%2C%20the%20input%20layer,50%2C50%2C3)%20.
	
	1st attempts at running CNN with imbalanced data: Failure. Getting error message "ValueError: Shapes (None, 1) and (None, 4) are incompatible" right after the 1st epoch seems to finish
	Error fixed: Had forgotten to change class_mode for val_ds to categorical
	Model finally running smoothly for the first time. Exhausted but feeling kind of better finally

24/07:	Experimenting with different resolutions for pictures of imbalanced data. So far seems that 256x256 give slightly better results
	Created new notebook containing only models with data already sorted for the experimentation. Duplicated it to use for actual work on models from now on
	
	More CNN Resources:
			Regarding the batch_size	--> https://machinelearningmastery.com/how-to-control-the-speed-and-stability-of-training-neural-networks-with-gradient-descent-batch-size/
			ImageDataGenerator		--> https://www.analyticsvidhya.com/blog/2020/08/image-augmentation-on-the-fly-using-keras-imagedatagenerator/
				Documentation		--> https://www.tensorflow.org/api_docs/python/tf/keras/preprocessing/image/ImageDataGenerator
			rescale parameter		--> https://datascience.stackexchange.com/questions/92499/rescale-parameter-in-data-augmentation
	
	Experimenting with parameter settings for image augmentation. Must find a protokoll and go with it so I can move on to next steps. Thought of more tailored protokoll but increase in performance seems to be painfully slow. Not enough time to let more epochs run
	Possibly have decided on universal settings for augmentation. Will prepare list of batch sizes for model to iteratively use and plot the resulting accuracies and maybe also losses right after
	Image augmentation parameters set. Model run with imbalanced set, currently running with balanced set.
	Accuracy scores of balanced set are up the wazoo already after the first couple of epochs. Probably won't need to run for different batch sizes as I planned and can move on to beutifying stuff.

25/07:	Running balanced set through the model again. Accuracy scores for 1st epochs make more sense. Learning curve doesn't start ath .94. Seems that it was an error. The model must have not truly reset
	Will let it run as I'm at work
	Decided to drop XGBoost. Acuracy scores and loss seem very agreeable anyways and extracting the features from layers of keras is a potentially good idea but not for now.
	Started structuring notebooks, cleaning and tidying up
	Added visualization of dataset
	Created table of contents

26/07 	Custom cmaps created
	History can't be used to retroactively extract scores and plot them. Will have to run the code again to change colors
	When batch size is the entire set kernal dies, probably not enough ram
	run_keras function seems to be executing just fine otherwise
	Found fix for the table of contents but it doesn't work online
	Found out why keras didn't utilize my gpu. Trying to fix it
	
	Resources:
		Multiclass cm and class. report	--> https://towardsai.net/p/l/multi-class-model-evaluation-with-confusion-matrix-and-classification-report

	Confusion matrices fixed
	Started with readme but have still some way to go
	Should I set things up so I can make tensorflow make use of my GPU? Maybe it doesn't matter at this point. No time left

To Do:	Write code to delete temp_test files after creation of confusion matrices
	Readme
	Run with models whole?
	RESEARCH MORE
		KERAS